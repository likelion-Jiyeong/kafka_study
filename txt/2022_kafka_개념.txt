1. 기본 개념
카프카에서는 데이터의 기본 단위를 메세지라고 한다. RDB의 row나 record에 비유될 수 있다.
메세지에는 key라는 메타데이터가 포함될 수 있다.
카프카의 메세지 데이터는 topic으로 분류된 파티션에 수록된다.
이때, 데이터를 일관된 해시 값으로 키를 생성하여 같은 키 값을 갖는 메세지는 항상
같은 파티션에 수록된다.
카프카는 여러개의 메세지를 모아 배치 형태로 파티션에 수록하므로 네트워크로부터 매번 각 메세지를 받아
처리하는 부담을 줄일 수 있다.

* 카프카에서는 일관된 데이터 형식이 중요하다. 메세지 쓰기와 읽기 작업을 분리해서 할 수 있기 때문이다.

1.1. 프로듀서와 컨슈머
프로듀서는 새로운 메세지를 생성하고, 컨슈머는 메세지를 읽는다. 
주키퍼나 카프카에서는 각 파티션에서 마지막에 읽은 데이터의 오프셋을 저장하고 있으므로
컨슈머가 읽기를 중단했다가 다시 시작하더라도 언제든 메세지를 읽을 수 있다.

1.2. 브로커와 클러스터
하나의 카프카 서버를 브로커라고 한다. 카프카 브로커는 클러스터의 일부로 동작한다.
카프카의 핵심기능 중 하나는 보존이다. 일정 기간 메세지를 보존하는 것이다.

2. 카프카를 사용하는 이유
2.1. 다중 프로듀서
여러 클라이언트가 많은 토픽을 사용해도 카프카는 무리 없이 많은 프로듀서의 메세지를 처리할 수 있다.
따라서 여러 프론트엔드 시스템으로부터 데이터를 수집하고 일관성을 유지하는 데 이상적이다.

2.2. 다중 컨슈머
많은 컨슈머가 상호 간섭 없이 어떤 메세지 스트림도 읽을 수 있게 지원한다.

2.3. 디스크 기반의 보존
카프카는 지속해서 메세지를 보존할 수 있다. 따라서 컨슈머가 항상 실시간으로 실행되지 않아도 된다.

2.4. 확장성
카프카는 어떤 크기의 데이터도 쉽게 처리할 수 있다.
